---
title: "Rapport"
author: "Florian CROCHET"
format:
  html:
    toc: true
    toc-title: Sommaire
    code-fold: true
    echo: true
    eval: true
    incremental: true
    fig-width: 14
    fig-height: 10
    fig-align: "center"
params:
  code_commune: 44109  # Valeur par défaut
  code_departement: 44  # Valeur par défaut
---

### Chargement de la librairie et du data frame du package

```{r}
# Librairie
library(firstlibFlorian)

# Data frame
data("df_Gers_Loire_Atlantique")

# head(df_Gers_Loire_Atlantique)
```


### Modification du code de manière à passer en paramètres le code commune et le code du département.

```{r}
# Fonction pour sélectionner une commune en utilisant son code commune
# et associer la classe commune au data frame

selection_commune <- function(code_commune, df = df_Gers_Loire_Atlantique) {
  
  if (!(code_commune %in% df$`Code de la commune`)) {
    stop("Aucune commune trouvée avec ce code.")
  }
  
  selection <- df |>
    dplyr::filter(`Code de la commune` == code_commune) |> 
    creer_commune()
  
  return(selection)
}



# Fonction pour sélectionner un département en utilisant son code département
# et associer la classe departement au data frame

selection_departement <- function(code_departement, df = df_Gers_Loire_Atlantique) {
  
  if (!(code_departement %in% df$`Code du département`)) {
    stop("Aucun département trouvé avec ce code.")
  }
  
  selection <- df |>
    dplyr::filter(`Code du département` == code_departement) |>
    creer_departement()
  
  return(selection)
}
```


### Commune

```{r}
# Sélection de la commune

df_commune <- selection_commune(
  params$code_commune
)
```

```{r}
# Utilisation de la fonction summary et plot pour df_commune

summary(df_commune)

plot(df_commune)
```


### Département

```{r}
# Sélection du département

df_departement <- selection_departement(
  params$code_departement
)
```

```{r}
# Utilisation des fonctions summary et plot pour df_departement

summary(df_departement)

plot(df_departement)
```
